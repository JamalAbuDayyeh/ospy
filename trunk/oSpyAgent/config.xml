<hookManager>
    <types>
        <!-- Kernel -->
        <enumeration name="IoControlCode">
            <member name="IOCTL_KS_PROPERTY" value="3080195"/>
            <member name="IOCTL_KS_READ_STREAM" value="3096599"/>
        </enumeration>

        <!-- Winsock -->
        <enumeration name="SockAddrFamily">
            <member name="AF_APPLETALK" value="16"/>
            <member name="AF_BAN" value="21"/>
            <member name="AF_CCITT" value="10"/>
            <member name="AF_CHAOS" value="5"/>
            <member name="AF_DATAKIT" value="9"/>
            <member name="AF_DECnet" value="12"/>
            <member name="AF_DLI" value="13"/>
            <member name="AF_ECMA" value="8"/>
            <member name="AF_FIREFOX" value="19"/>
            <member name="AF_HYLINK" value="15"/>
            <member name="AF_IMPLINK" value="3"/>
            <member name="AF_INET" value="2"/>
            <member name="AF_INET6" value="23"/>
            <member name="AF_IPX" value="6"/>
            <member name="AF_ISO" value="7"/>
            <member name="AF_LAT" value="14"/>
            <member name="AF_NETBIOS" value="17"/>
            <member name="AF_PUP" value="4"/>
            <member name="AF_SNA" value="11"/>
            <member name="AF_UNIX" value="1"/>
            <member name="AF_UNKNOWN1" value="20"/>
            <member name="AF_UNSPEC" value="0"/>
            <member name="AF_VOICEVIEW" value="18"/>
            <member name="AF_MAX" value="22"/>
        </enumeration>
        <enumeration name="SockType">
            <member name="SOCK_DGRAM" value="2"/>
            <member name="SOCK_RAW" value="3"/>
            <member name="SOCK_RDM" value="4"/>
            <member name="SOCK_SEQPACKET" value="5"/>
            <member name="SOCK_STREAM" value="1"/>
        </enumeration>
        <enumeration name="AF_INET_Protocol">
            <member name="IPPROTO_GGP" value="3"/>
            <member name="IPPROTO_ICMP" value="1"/>
            <member name="IPPROTO_IDP" value="22"/>
            <member name="IPPROTO_IGMP" value="2"/>
            <member name="IPPROTO_IP" value="0"/>
            <member name="IPPROTO_MAX" value="256"/>
            <member name="IPPROTO_ND" value="77"/>
            <member name="IPPROTO_PUP" value="12"/>
            <member name="IPPROTO_RAW" value="255"/>
            <member name="IPPROTO_TCP" value="6"/>
            <member name="IPPROTO_UDP" value="17"/>
        </enumeration>
        <structure name="Ipv4Sockaddr">
            <field name="sin_family" offset="0" type="SockAddrFamily" marshalAs="Int16"/>
            <field name="sin_port" offset="2" type="UInt16" endian="big"/>
            <field name="sin_addr" offset="4" type="Ipv4InAddr"/>
        </structure>
        <structure name="WSABuf">
            <field name="len" offset="0" type="UInt32"/>
            <field name="buf" offset="4" type="ByteArrayPtr">
                <bindTypeProperty propertyName="size"
                                  sourceField="len"/>
            </field>
        </structure>

        <!-- Secur32 -->
        <!-- FIXME: this should be made into a Flags enum or something -->
        <enumeration name="SecBufferType">
            <member name="SECBUFFER_EMPTY" value="0"/>
            <member name="SECBUFFER_DATA" value="1"/>
            <member name="SECBUFFER_TOKEN" value="2"/>
            <member name="SECBUFFER_PKG_PARAMS" value="3"/>
            <member name="SECBUFFER_MISSING" value="4"/>
            <member name="SECBUFFER_EXTRA" value="5"/>
            <member name="SECBUFFER_STREAM_TRAILER" value="6"/>
            <member name="SECBUFFER_STREAM_HEADER" value="7"/>
            <member name="SECBUFFER_MECHLIST" value="11"/>
            <member name="SECBUFFER_MECHLIST_SIGNATURE" value="12"/>
            <member name="SECBUFFER_TARGET" value="13"/>
            <member name="SECBUFFER_CHANNEL_BINDINGS" value="14"/>
        </enumeration>
        <structure name="SecBuffer">
            <field name="cbBuffer" offset="0" type="UInt32"/>
            <field name="BufferType" offset="4" type="SecBufferType"/>
            <field name="pvBuffer" offset="8" type="ByteArrayPtr">
                <bindTypeProperty propertyName="size"
                                  sourceField="cbBuffer"/>
            </field>
        </structure>
        <structure name="SecBufferDesc">
            <field name="ulVersion" offset="0" type="UInt32"/>
            <field name="cBuffers" offset="4" type="UInt32"/>
            <field name="pBuffers" offset="8" type="ArrayPtr"
                   elementType="SecBuffer">
                <bindTypeProperty propertyName="elementCount"
                                  sourceField="cBuffers"/>
            </field>
        </structure>

        <!-- WinCrypt -->
        <enumeration name="AlgId">
            <member name="CALG_3DES" value="0x6603"/>
            <member name="CALG_3DES_112" value="0x6609"/>
            <member name="CALG_AES" value="0x6611"/>
            <member name="CALG_AGREEDKEY_ANY" value="0xaa03"/>
            <member name="CALG_CYLINK_MEK" value="0x660c"/>
            <member name="CALG_DES" value="0x6601"/>
            <member name="CALG_DH_EPHEM" value="0xaa02"/>
            <member name="CALG_DH_SF" value="0xaa01"/>
            <member name="CALG_DSS_SIGN" value="0x2200"/>
            <member name="CALG_HMAC" value="0x8009"/>
            <member name="CALG_KEA_KEYX" value="0xaa04"/>
            <member name="CALG_MAC" value="0x8005"/>
            <member name="CALG_MD2" value="0x8001"/>
            <member name="CALG_MD4" value="0x8002"/>
            <member name="CALG_MD5" value="0x8003"/>
            <member name="CALG_PCT1_MASTER" value="0x4c04"/>
            <member name="CALG_RC2" value="0x6602"/>
            <member name="CALG_RC4" value="0x6801"/>
            <member name="CALG_RSA_KEYX" value="0xa400"/>
            <member name="CALG_RSA_SIGN" value="0x2400"/>
            <member name="CALG_SCHANNEL_ENC_KEY" value="0x4c07"/>
            <member name="CALG_SCHANNEL_MAC_KEY" value="0x4c03"/>
            <member name="CALG_SCHANNEL_MASTER_HASH" value="0x4c02"/>
            <member name="CALG_SEAL" value="0x6802"/>
            <member name="CALG_SHA1" value="0x8004"/>
            <member name="CALG_SKIPJACK" value="0x660a"/>
            <member name="CALG_SSL2_MASTER" value="0x4c05"/>
            <member name="CALG_SSL3_MASTER" value="0x4c01"/>
            <member name="CALG_SSL3_SHAMD5" value="0x8008"/>
            <member name="CALG_TEK" value="0x660b"/>
            <member name="CALG_TLS1_MASTER" value="0x4c06"/>
            <member name="CALG_TLS1PRF" value="0x800a"/>
        </enumeration>

        <!-- Registry -->
        <enumeration name="RegKeyHandle">
            <member name="HKEY_CLASSES_ROOT" value="0x80000000"/>
            <member name="HKEY_CURRENT_USER" value="0x80000001"/>
            <member name="HKEY_LOCAL_MACHINE" value="0x80000002"/>
            <member name="HKEY_USERS" value="0x80000003"/>
            <member name="HKEY_DYN_DATA" value="0x80000006"/>
        </enumeration>

        <!-- Windows Live Messenger -->
        <structure name="P2PBridgeProperties">
            <field name="field_0" offset="0" type="UInt32"/>
            <field name="field_4" offset="4" type="CPPBool"/>
            <field name="field_8" offset="8" type="UInt32"/>
            <field name="field_C" offset="0xC" type="UInt32"/>
            <field name="Priority" offset="0x10" type="UInt32"/>
            <field name="MaxChunkSize" offset="0x14" type="UInt32"/>
            <field name="field_18" offset="0x18" type="UInt32"/>
            <field name="field_1C" offset="0x1C" type="UInt32"/>
            <field name="field_20" offset="0x20" type="UInt32"/>
        </structure>
    </types>

    <specs>
        <functions>
            <!-- kernel32 -->
            <!--
            <function name="HeapAlloc" callingConvention="stdcall">
                <returnValue type="UInt32" hex="true"/>
                <arguments>
                    <argument name="hHeap" direction="in" type="UInt32" hex="true"/>
                    <argument name="dwFlags" direction="in" type="UInt32" hex="true"/>
                    <argument name="dwBytes" direction="in" type="UInt32"/>
                </arguments>
            </function>
            -->
            <function name="CreateFileA" callingConvention="stdcall">
                <returnValue type="UInt32" hex="true"/>
                <arguments>
                    <argument name="lpFileName" direction="in" type="AsciiStringPtr"/>
                    <argument name="dwDesiredAccess" direction="in" type="UInt32" hex="true"/>
                    <argument name="dwShareMode" direction="in" type="UInt32" hex="true"/>
                    <argument name="lpSecurityAttributes" direction="in" type="UInt32" hex="true"/>
                    <argument name="dwCreationDisposition" direction="in" type="UInt32" hex="true"/>
                    <argument name="dwFlagsAndAttributes" direction="in" type="UInt32" hex="true"/>
                    <argument name="hTemplateFile" direction="in" type="UInt32" hex="true"/>
                </arguments>
            </function>
            <function name="CreateFileW" callingConvention="stdcall">
                <returnValue type="UInt32" hex="true"/>
                <arguments>
                    <argument name="lpFileName" direction="in" type="UnicodeStringPtr"/>
                    <argument name="dwDesiredAccess" direction="in" type="UInt32" hex="true"/>
                    <argument name="dwShareMode" direction="in" type="UInt32" hex="true"/>
                    <argument name="lpSecurityAttributes" direction="in" type="UInt32" hex="true"/>
                    <argument name="dwCreationDisposition" direction="in" type="UInt32" hex="true"/>
                    <argument name="dwFlagsAndAttributes" direction="in" type="UInt32" hex="true"/>
                    <argument name="hTemplateFile" direction="in" type="UInt32" hex="true"/>
                </arguments>
            </function>

            <function name="DeviceIoControl" callingConvention="stdcall">
                <returnValue type="MSBool"/>
                <arguments>
                    <argument name="hDevice" direction="in" type="UInt32" hex="true"/>
                    <argument name="dwIoControlCode" direction="in" type="IoControlCode"/>
                    <argument name="lpInBuffer" direction="in" type="ByteArrayPtr" size="arg.nInBufferSize"/>
                    <argument name="nInBufferSize" direction="in" type="UInt32"/>
                    <argument name="lpOutBuffer" direction="out" type="ByteArrayPtr" size="arg.lpBytesReturned">
                        <logCondition>reg.eax != 0</logCondition>
                    </argument>
                    <argument name="nOutBufferSize" direction="in" type="UInt32"/>
                    <argument name="lpBytesReturned" direction="out" type="UInt32Ptr"/>
                    <argument name="lpOverlapped" direction="in" type="UInt32" hex="true"/>
                </arguments>
            </function>

            <function name="WaitForSingleObject" callingConvention="stdcall">
                <returnValue type="UInt32" hex="true"/>
                <arguments>
                    <argument name="hHandle" direction="in" type="UInt32" hex="true"/>
                    <argument name="dwMilliseconds" direction="in" type="UInt32"/>
                </arguments>
            </function>
            <function name="WaitForSingleObjectEx" callingConvention="stdcall">
                <returnValue type="UInt32" hex="true"/>
                <arguments>
                    <argument name="hHandle" direction="in" type="UInt32" hex="true"/>
                    <argument name="dwMilliseconds" direction="in" type="UInt32"/>
                    <argument name="bAlertable" direction="in" type="UInt32"/>
                </arguments>
            </function>
            <function name="WaitForMultipleObjects" callingConvention="stdcall">
                <returnValue type="UInt32" hex="true"/>
                <arguments>
                    <argument name="nCount" direction="in" type="UInt32"/>
                    <argument name="lpHandles" direction="in" type="ArrayPtr"
                        elementType="UInt32" elementCount="arg.nCount"/>
                    <argument name="bWaitAll" direction="in" type="UInt32"/>
                    <argument name="dwMilliseconds" direction="in" type="UInt32"/>
                </arguments>
            </function>
            <function name="WaitForMultipleObjectsEx" callingConvention="stdcall">
                <returnValue type="UInt32" hex="true"/>
                <arguments>
                    <argument name="nCount" direction="in" type="UInt32"/>
                    <argument name="lpHandles" direction="in" type="ArrayPtr"
                        elementType="UInt32" elementCount="arg.nCount"/>
                    <argument name="bWaitAll" direction="in" type="UInt32"/>
                    <argument name="dwMilliseconds" direction="in" type="UInt32"/>
                    <argument name="bAlertable" direction="in" type="UInt32"/>
                </arguments>
            </function>
            <function name="GetOverlappedResult" callingConvention="stdcall">
                <returnValue type="MSBool"/>
                <arguments>
                    <argument name="hFile" direction="in" type="UInt32" hex="true"/>
                    <argument name="lpOverlapped" direction="in" type="UInt32" hex="true"/>
                    <argument name="lpNumberOfBytesTransferred" direction="out" type="UInt32Ptr"/>
                    <argument name="bWait" direction="in" type="MSBool"/>
                </arguments>
            </function>
            <function name="GetTickCount">
                <returnValue type="UInt32"/>
            </function>

            <!-- KernelStreaming userspace API -->
            <function name="KsCreatePin" callingConvention="stdcall">
                <returnValue type="UInt32" hex="true"/>
                <arguments>
                    <argument name="FilterHandle" direction="in" type="UInt32" hex="true"/>
                    <argument name="Connect" direction="in" type="UInt32" hex="true"/>
                    <argument name="DesiredAccess" direction="in" type="UInt32" hex="true"/>
                    <argument name="ConnectionHandle" direction="out" type="UInt32Ptr" hex="true"/>
                </arguments>
            </function>

            <function name="KsCreateClock" callingConvention="stdcall">
                <returnValue type="UInt32" hex="true"/>
                <arguments>
                    <argument name="ConnectionHandle" direction="in" type="UInt32" hex="true"/>
                    <argument name="ClockCreate" direction="in" type="UInt32" hex="true"/>
                    <argument name="ClockHandle" direction="out" type="UInt32Ptr" hex="true"/>
                </arguments>
            </function>

            <!-- user32 -->
            <function name="SetTimer">
                <returnValue type="UInt32" hex="true"/>
                <arguments>
                    <argument name="hWnd" direction="in" type="UInt32" hex="true"/>
                    <argument name="nIDEvent" direction="in" type="UInt32" hex="true"/>
                    <argument name="uElapse" direction="in" type="UInt32"/>
                    <argument name="lpTimerFunc" direction="in" type="UInt32" hex="true"/>
                </arguments>
            </function>

            <!-- Winsock -->
            <!-- FIXME: should have a built-in SockAddrAuto type instead of assuming AF_INET -->
            <function name="socket" callingConvention="stdcall">
                <returnValue type="UInt32" hex="true"/>
                <arguments>
                    <argument name="af" direction="in" type="SockAddrFamily"/>
                    <argument name="type" direction="in" type="SockType"/>
                    <argument name="protocol" direction="in" type="Dynamic"
                              typeNameBase="arg.af" typeNameSuffix="_Protocol"/>
                </arguments>
            </function>
            <function name="closesocket" callingConvention="stdcall">
                <returnValue type="Int32"/>
                <arguments>
                    <argument name="s" direction="in" type="UInt32" hex="true"/>
                </arguments>
            </function>
            <function name="connect" callingConvention="stdcall">
                <returnValue type="Int32"/>
                <arguments>
                    <argument name="s" direction="in" type="UInt32" hex="true"/>
                    <argument name="name" direction="in" type="Ipv4SockaddrPtr"/>
                    <argument name="namelen" direction="in" type="Int32"/>
                </arguments>
            </function>
            <function name="recv" callingConvention="stdcall">
                <returnValue type="Int32"/>
                <arguments>
                    <argument name="s" direction="in" type="UInt32" hex="true"/>
                    <argument name="buf" direction="out" type="ByteArrayPtr" size="reg.eax"/>
                    <argument name="len" direction="in" type="Int32"/>
                    <argument name="flags" direction="in" type="Int32" hex="true"/>
                </arguments>
            </function>
            <function name="send" callingConvention="stdcall">
                <returnValue type="Int32"/>
                <arguments>
                    <argument name="s" direction="in" type="UInt32" hex="true"/>
                    <argument name="buf" direction="in" type="ByteArrayPtr" size="arg.len"/>
                    <argument name="len" direction="in" type="Int32"/>
                    <argument name="flags" direction="in" type="Int32" hex="true"/>
                </arguments>
            </function>
            <function name="recvfrom" callingConvention="stdcall">
                <returnValue type="Int32"/>
                <arguments>
                    <argument name="s" direction="in" type="UInt32" hex="true"/>
                    <argument name="buf" direction="out" type="ByteArrayPtr" size="reg.eax"/>
                    <argument name="len" direction="in" type="Int32"/>
                    <argument name="flags" direction="in" type="Int32" hex="true"/>
                    <argument name="from" direction="out" type="Ipv4SockaddrPtr"/>
                    <argument name="fromlen" direction="in/out" type="Int32Ptr"/>
                </arguments>
            </function>
            <function name="sendto" callingConvention="stdcall">
                <returnValue type="Int32"/>
                <arguments>
                    <argument name="s" direction="in" type="UInt32" hex="true"/>
                    <argument name="buf" direction="in" type="ByteArrayPtr" size="arg.len"/>
                    <argument name="len" direction="in" type="Int32"/>
                    <argument name="flags" direction="in" type="Int32" hex="true"/>
                    <argument name="to" direction="in" type="Ipv4SockaddrPtr"/>
                    <argument name="tolen" direction="in" type="Int32"/>
                </arguments>
            </function>
            <function name="WSAConnect" callingConvention="stdcall">
                <returnValue type="Int32"/>
                <arguments>
                    <argument name="s" direction="in" type="UInt32" hex="true"/>
                    <argument name="name" direction="in" type="Ipv4SockaddrPtr"/>
                    <argument name="namelen" direction="in" type="Int32"/>
                    <argument name="lpCallerData" direction="in" type="WSABufPtr"/>
                    <argument name="lpCalleeData" direction="out" type="WSABufPtr"/>
                    <argument name="lpSQOS" direction="in" type="UInt32" hex="true"/>
                    <argument name="lpGQOS" direction="in" type="UInt32" hex="true"/>
                </arguments>
            </function>
            <function name="WSARecv" callingConvention="stdcall">
                <returnValue type="Int32"/>
                <arguments>
                    <argument name="s" direction="in" type="UInt32" hex="true"/>
                    <argument name="lpBuffers" direction="in/out" type="ArrayPtr"
                              elementType="WSABuf" elementCount="arg.dwBufferCount"/>
                    <argument name="dwBufferCount" direction="in" type="UInt32"/>
                    <argument name="lpNumberOfBytesRecvd" direction="out" type="UInt32Ptr"/>
                    <argument name="lpFlags" direction="in/out" type="UInt32Ptr"/>
                    <argument name="lpOverlapped" direction="in" type="UInt32" hex="true"/>
                    <argument name="lpCompletionRoutine" direction="in" type="UInt32" hex="true"/>
                </arguments>
            </function>
            <function name="WSASend" callingConvention="stdcall">
                <returnValue type="Int32"/>
                <arguments>
                    <argument name="s" direction="in" type="UInt32" hex="true"/>
                    <argument name="lpBuffers" direction="in" type="ArrayPtr"
                              elementType="WSABuf" elementCount="arg.dwBufferCount"/>
                    <argument name="dwBufferCount" direction="in" type="UInt32"/>
                    <argument name="lpNumberOfBytesSent" direction="out" type="UInt32Ptr"/>
                    <argument name="dwFlags" direction="in" type="UInt32" hex="true"/>
                    <argument name="lpOverlapped" direction="in" type="UInt32" hex="true"/>
                    <argument name="lpCompletionRoutine" direction="in" type="UInt32" hex="true"/>
                </arguments>
            </function>
            <function name="WSARecvFrom" callingConvention="stdcall">
                <returnValue type="Int32"/>
                <arguments>
                    <argument name="s" direction="in" type="UInt32" hex="true"/>
                    <argument name="lpBuffers" direction="in/out" type="ArrayPtr"
                              elementType="WSABuf" elementCount="arg.dwBufferCount"/>
                    <argument name="dwBufferCount" direction="in" type="UInt32"/>
                    <argument name="lpNumberOfBytesRecvd" direction="out" type="UInt32Ptr"/>
                    <argument name="lpFlags" direction="in/out" type="UInt32Ptr"/>
                    <argument name="lpFrom" direction="out" type="Ipv4SockaddrPtr"/>
                    <argument name="lpFromlen" direction="in/out" type="Int32Ptr"/>
                    <argument name="lpOverlapped" direction="in" type="UInt32" hex="true"/>
                    <argument name="lpCompletionRoutine" direction="in" type="UInt32" hex="true"/>
                </arguments>
            </function>
            <function name="WSASendTo" callingConvention="stdcall">
                <returnValue type="Int32"/>
                <arguments>
                    <argument name="s" direction="in" type="UInt32" hex="true"/>
                    <argument name="lpBuffers" direction="in" type="ArrayPtr"
                              elementType="WSABuf" elementCount="arg.dwBufferCount"/>
                    <argument name="dwBufferCount" direction="in" type="UInt32"/>
                    <argument name="lpNumberOfBytesSent" direction="out" type="UInt32Ptr"/>
                    <argument name="dwFlags" direction="in" type="UInt32" hex="true"/>
                    <argument name="lpTo" direction="in" type="Ipv4SockaddrPtr"/>
                    <argument name="iToLen" direction="in" type="Int32"/>
                    <argument name="lpOverlapped" direction="in" type="UInt32" hex="true"/>
                    <argument name="lpCompletionRoutine" direction="in" type="UInt32" hex="true"/>
                </arguments>
            </function>

            <!-- Secur32 -->
            <function name="EncryptMessage" callingConvention="stdcall">
                <returnValue type="Int32"/>
                <arguments>
                    <argument name="phContext" direction="in" type="UInt32" hex="true"/>
                    <argument name="fQOP" direction="in" type="UInt32" hex="true"/>
                    <argument name="pMessage" direction="in/out" type="SecBufferDescPtr"/>
                    <argument name="MessageSeqNo" direction="in" type="UInt32"/>
                </arguments>
            </function>
            <function name="DecryptMessage" callingConvention="stdcall">
                <returnValue type="Int32"/>
                <arguments>
                    <argument name="phContext" direction="in" type="UInt32" hex="true"/>
                    <argument name="pMessage" direction="in/out" type="SecBufferDescPtr"/>
                    <argument name="MessageSeqNo" direction="in" type="UInt32"/>
                    <argument name="pfQOP" direction="out" type="UInt32Ptr" hex="true"/>
                </arguments>
            </function>

            <!-- WinCrypt -->
            <function name="CryptAcquireContextA" callingConvention="stdcall">
                <returnValue type="MSBool"/>
                <arguments>
                    <argument name="phProv" direction="out" type="UInt32Ptr" hex="true"/>
                    <argument name="pszContainer" direction="in" type="AsciiStringPtr"/>
                    <argument name="pszProvider" direction="in" type="AsciiStringPtr"/>
                    <argument name="dwProvType" direction="in" type="UInt32" hex="true"/>
                    <argument name="dwFlags" direction="in" type="UInt32" hex="true"/>
                </arguments>
            </function>
            <function name="CryptAcquireContextW" callingConvention="stdcall">
                <returnValue type="MSBool"/>
                <arguments>
                    <argument name="phProv" direction="out" type="UInt32Ptr" hex="true"/>
                    <argument name="pszContainer" direction="in" type="UnicodeStringPtr"/>
                    <argument name="pszProvider" direction="in" type="UnicodeStringPtr"/>
                    <argument name="dwProvType" direction="in" type="UInt32" hex="true"/>
                    <argument name="dwFlags" direction="in" type="UInt32" hex="true"/>
                </arguments>
            </function>
            <function name="CryptReleaseContext" callingConvention="stdcall">
                <returnValue type="MSBool"/>
                <arguments>
                    <argument name="hProv" direction="in" type="UInt32" hex="true"/>
                    <argument name="dwFlags" direction="in" type="UInt32" hex="true"/>
                </arguments>
            </function>
            <function name="CryptCreateHash" callingConvention="stdcall">
                <returnValue type="MSBool"/>
                <arguments>
                    <argument name="hProv" direction="in" type="UInt32" hex="true"/>
                    <argument name="Algid" direction="in" type="AlgId"/>
                    <argument name="hKey" direction="in" type="UInt32" hex="true"/>
                    <argument name="dwFlags" direction="in" type="UInt32" hex="true"/>
                    <argument name="phHash" direction="out" type="UInt32Ptr" hex="true"/>
                </arguments>
            </function>
            <function name="CryptDestroyHash" callingConvention="stdcall">
                <returnValue type="MSBool"/>
                <arguments>
                    <argument name="hHash" direction="in" type="UInt32" hex="true"/>
                </arguments>
            </function>
            <function name="CryptHashData" callingConvention="stdcall">
                <returnValue type="MSBool"/>
                <arguments>
                    <argument name="hHash" direction="in" type="UInt32" hex="true"/>
                    <argument name="pbData" direction="in" type="ByteArrayPtr" size="arg.dwDataLen"/>
                    <argument name="dwDataLen" direction="in" type="UInt32"/>
                    <argument name="dwFlags" direction="in" type="UInt32" hex="true"/>
                </arguments>
            </function>

            <!-- Registry -->
            <function name="RegOpenKeyExW" callingConvention="stdcall">
                <returnValue type="UInt32"/>
                <arguments>
                    <argument name="hKey" direction="in" type="RegKeyHandle"/>
                    <argument name="lpSubKey" direction="in" type="UnicodeStringPtr"/>
                    <argument name="ulOptions" direction="in" type="UInt32"/>
                    <argument name="samDesired" direction="in" type="UInt32" hex="true"/>
                    <argument name="phkResult" direction="out" type="UInt32Ptr" hex="true"/>
                </arguments>
            </function>

            <!-- Windows Live Messenger -->
            <function name="WLMDebug">
                <arguments>
                    <argument name="domain" direction="in" type="Int32"/>
                    <argument name="severity" direction="in" type="Int32"/>
                    <argument name="format" direction="in" type="UnicodeFormatStringPtr"
                              vaList="arg.args"/>
                    <argument name="args" direction="in" type="VaList"/>
                </arguments>
            </function>
            <function name="RTCDebug" callingConvention="stdcall">
                <returnValue type="Int32"/>
                <arguments>
                    <argument name="a" direction="in" type="Int32"/>
                    <argument name="b" direction="in" type="Int32"/>
                    <argument name="c" direction="in" type="Int32"/>
                    <argument name="d" direction="in" type="Int32"/>
                    <argument name="format" direction="in" type="AsciiFormatStringPtr"
                              vaList="arg.args"/>
                    <argument name="args" direction="in" type="VaList"/>
                </arguments>
            </function>
        </functions>

        <vtables>
            <!-- Windows Live Messenger -->
            <vtable id="CP2PTransportBridge" methodCount="22">
                <method index="0" name="OnBridgePeerConnectingEndpointsUpdated" callingConvention="thiscall" argsSize="8" logNested="true"/>
                <method index="1" name="OnBridgePeerListeningEndpointsUpdated" callingConvention="thiscall" argsSize="4" logNested="true"/>
                <method index="4" name="P2PListen" callingConvention="thiscall" argsSize="8" logNested="true"/>
                <method index="5" name="P2PConnect" callingConvention="thiscall" argsSize="8" logNested="true"/>
                <method index="7" name="Destroy" callingConvention="thiscall" argsSize="4" logNested="true"/>
                <method index="8" name="Shutdown" callingConvention="thiscall" argsSize="0" logNested="true"/>
                <method index="9" name="Init" callingConvention="thiscall" argsSize="4" logNested="true"/>
                <method index="10" name="Send" callingConvention="thiscall" logNested="true">
                    <arguments>
                        <argument name="buf" direction="in" type="ByteArrayPtr" size="arg.len"/>
                        <argument name="len" direction="in" type="Int32"/>
                        <argument name="id" direction="in" type="Int32" hex="true"/>
                        <argument name="type" direction="in" type="Int32" hex="true"/>
                    </arguments>
                </method>
                <method index="11" name="GetProperties" callingConvention="thiscall" logNested="true">
                    <arguments>
                        <argument name="lpProperties" direction="out" type="P2PBridgePropertiesPtr"/>
                    </arguments>
                </method>
                <method index="12" name="ReadyToSend" callingConvention="thiscall" argsSize="0" logNested="true"/>
                <method index="13" name="ConnectBridge" callingConvention="thiscall" argsSize="0" logNested="true"/>
                <method index="17" name="OnReceivedConnectRequest" callingConvention="thiscall" argsSize="4" logNested="true"/>
                <method index="18" name="OnDataReceived" callingConvention="thiscall" argsSize="16" logNested="true"/>
                <method index="19" name="OnDataResponse" callingConvention="thiscall" argsSize="12" logNested="true"/>
                <method index="20" name="OnBridgeStateChange" callingConvention="thiscall" argsSize="8" logNested="true"/>
            </vtable>

            <vtable id="WLMAudioEncoder" methodCount="8">
                <method index="0" name="Init" callingConvention="thiscall">
                    <returnValue type="UInt32" hex="true"/>
                </method>
                <method index="1" name="Encode" callingConvention="thiscall">
                    <returnValue type="UInt32" hex="true"/>
                    <arguments>
                        <argument name="input_buf" direction="in" type="ByteArrayPtr" size="arg.input_size"/>
                        <argument name="input_size" direction="in" type="Int32"/>
                        <argument name="output_buf" direction="out" type="ByteArrayPtr" size="arg.output_size"/>
                        <argument name="output_size" direction="in/out" type="Int32Ptr"/>
                    </arguments>
                </method>
                <method index="2" name="GetSomeValue" callingConvention="thiscall">
                    <returnValue type="UInt32" hex="true"/>
                </method>
                <method index="4" name="SetBitrate" callingConvention="thiscall">
                    <returnValue type="UInt32" hex="true"/>
                    <arguments>
                        <argument name="bitrate" direction="in" type="Int32"/>
                    </arguments>
                </method>
            </vtable>
            <vtable id="WLMAudioDecoder" methodCount="6">
                <method index="1" name="Decode" argsSize="16" callingConvention="thiscall">
                </method>
            </vtable>
            <vtable id="WLMAudioHealer" methodCount="9">
                <method index="4" name="method_4" argsSize="4" callingConvention="thiscall"/>
                <method index="7" name="method_7" argsSize="8" callingConvention="thiscall"/>
                <method index="8" name="method_8" argsSize="12" callingConvention="thiscall"/>
            </vtable>
        </vtables>
    </specs>

    <signatures>
        <!-- Windows Live Messenger -->
        <signature name="WLMDebug">
            84 C0                          <!-- test al, al                     -->
            74 14                          <!-- jz short loc_448B51             -->
            83 7D 0C 02                    <!-- cmp [ebp+arg_4], 2              -->
            77 0E                          <!-- ja short loc_448B51             -->
            FF 75 14                       <!-- push [ebp+arg_C]                -->
            FF 75 10                       <!-- push [ebp+arg_8]                -->
            FF 75 08                       <!-- push [ebp+arg_0]                -->
            E8                             <!-- call ...                        -->
        </signature>
        <signature name="CTCPBridgeCtor">
            C7 86 FC 00 00 00 98 3A 00 00  <!-- mov dword ptr [esi+0FCh], 15000 -->
            C7 86 00 01 00 00 78 05 00 00  <!-- mov dword ptr [esi+100h], 1400  -->
        </signature>
        <signature name="CUDPBridgeCtor">
            C7 86 10 01 00 00 20 4E 00 00  <!-- mov dword ptr [esi+110h], 20000 -->
            C7 86 14 01 00 00 06 00 00 00  <!-- mov dword ptr [esi+114h], 6     -->
        </signature>
        <signature name="CTurnBridgeCtor">
            66 C7 86 6A 01 00 00 01 80     <!-- mov word ptr [esi+16Ah], 32769  -->
            66 C7 86 6C 01 00 00 01 81     <!-- mov word ptr [esi+16Ch], 33025  -->
        </signature>
        <signature name="CSBBridgeCtor">
            89 5E 18                       <!-- mov [esi+18h], ebx              -->
            8D 4E 24                       <!-- lea ecx, [esi+24h]              -->
        </signature>

        <!-- RTMPLTFM -->
        <signature name="RTCDebug">
            8B FF 55 8B EC 8B 45 08 56 57 8B F0 33 FF 83 E6 0F 39
        </signature>
        <signature name="RTAudio16EncCtor">
            8B C1                          <!-- mov eax, ecx -->
            83 60 18 00                    <!-- and dword ptr [eax+18h], 0      -->
            83 60 1C 00                    <!-- and dword ptr [eax+1Ch], 0      -->
            C7 40 10 80 3E 00 00           <!-- mov dword ptr [eax+10h], 16000  -->
            C7 40 14 07 00 00 00           <!-- mov dword ptr [eax+14h], 7      -->
            C7 00 xx xx xx xx              <!-- mov dword ptr [eax], offset CAudioEncode_MSRTAudio16KHz_vtable -->
            C3                             <!-- retn                            -->
        </signature>
        <signature name="RTAudio16DecCtor">
            74 xx                          <!-- jz short xx                     -->
            C7 40 10 80 3E 00 00           <!-- mov dword ptr [eax+10h], 16000  -->
            C7 40 14 07 00 00 00           <!-- mov dword ptr [eax+14h], 7      -->
            C7 00 xx xx xx xx              <!-- mov dword ptr [eax], offset CAudioDecode_MSRTAudio16KHz_vtable -->
            EB xx                          <!-- jmp short xx                    -->
        </signature>
        <signature name="RTAudioHealerCtor">
            8B F1                          <!-- mov esi, ecx                    -->
            89 46 0C                       <!-- mov [esi+0Ch], eax              -->
            8B 45 10                       <!-- mov eax, [ebp+arg_8]            -->
            C7 06 xx xx xx xx              <!-- mov dword ptr [esi], offset CMSRTAudioHealer_vtable -->
        </signature>
    </signatures>

    <hooks>
        <!-- DLLs -->

        <dllModule name="kernel32.dll">
            <!--
            <function specId="HeapAlloc"/>
            -->
            <function specId="CreateFileA"/>
            <function specId="CreateFileW"/>

            <function specId="DeviceIoControl"/>

            <!--
            <function specId="WaitForSingleObject"/>
            <function specId="WaitForMultipleObjects"/>
            <function specId="WaitForSingleObjectEx"/>
            <function specId="WaitForMultipleObjectsEx"/>
            -->

            <function specId="GetOverlappedResult"/>
        </dllModule>

        <dllModule name="ksuser.dll">
            <function specId="KsCreatePin"/>
            <function specId="KsCreateClock"/>
        </dllModule>

        <!--
        <dllModule name="user32.dll">
            <function specId="SetTimer"/>
        </dllModule>
        -->

        <dllModule name="ws2_32.dll">
            <function specId="socket"/>
            <function specId="closesocket"/>
            <function specId="connect"/>
            <function specId="recv"/>
            <function specId="send"/>
            <function specId="recvfrom"/>
            <function specId="sendto"/>
            <function specId="WSAConnect"/>
            <function specId="WSARecv"/>
            <function specId="WSASend"/>
            <function specId="WSARecvFrom"/>
            <function specId="WSASendTo"/>
        </dllModule>

        <dllModule name="wsock32.dll">
            <function specId="recv"/>
            <function specId="recvfrom"/>
        </dllModule>

        <!--
        <dllModule name="secur32.dll">
            <function specId="EncryptMessage"/>
            <function specId="DecryptMessage"/>
        </dllModule>
        -->

        <!--
        <dllModule name="advapi32.dll">
            <function specId="RegOpenKeyExW"/>

            <function specId="CryptAcquireContextA"/>
            <function specId="CryptAcquireContextW"/>
            <function specId="CryptReleaseContext"/>
            <function specId="CryptCreateHash"/>
            <function specId="CryptDestroyHash"/>
            <function specId="CryptHashData"/>
        </dllModule>
        -->

        <!-- Internal functions -->
        <functions processName="msnmsgr.exe">
            <!-- ...disabled for now due to invalid format strings sometimes being passed...
            <function specId="WLMDebug" sigId="WLMDebug" sigOffset="-11"/>
            -->
            <function specId="RTCDebug" sigId="RTCDebug" moduleName="RTMPLTFM.dll"/>
        </functions>

        <!-- Internal vtables -->
        <vtables processName="msnmsgr.exe">
            <vtable specId="CP2PTransportBridge" name="CTCPTransportBridge" ctorSigId="CTCPBridgeCtor" ctorSigOffset="-50"/>
            <vtable specId="CP2PTransportBridge" name="CTrivialUDPTransportBridge" ctorSigId="CUDPBridgeCtor" ctorSigOffset="-122"/>
            <vtable specId="CP2PTransportBridge" name="CTurnBridge" ctorSigId="CTurnBridgeCtor" ctorSigOffset="-407"/>
            <vtable specId="CP2PTransportBridge" name="CSBBridge" ctorSigId="CSBBridgeCtor" ctorSigOffset="-10"/>

            <vtable specId="WLMAudioEncoder" name="RTAudio16Encoder" ctorSigId="RTAudio16EncCtor" ctorSigOffset="26" moduleName="RTMPLTFM.dll"/>
            <vtable specId="WLMAudioDecoder" name="RTAudio16Decoder" ctorSigId="RTAudio16DecCtor" ctorSigOffset="18" moduleName="RTMPLTFM.dll"/>
            <vtable specId="WLMAudioHealer" name="RTAudioHealer" ctorSigId="RTAudioHealerCtor" ctorSigOffset="10" moduleName="RTMPLTFM.dll"/>
        </vtables>
    </hooks>
</hookManager>

<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>